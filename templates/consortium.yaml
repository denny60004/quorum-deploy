apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    node.number: "4"
    node.current: "_NODE_ID_"
  creationTimestamp: null
  labels:
    name: node-_NODE_ID_
  name: node-_NODE_ID_
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: consortiumchain
        name: node-_NODE_ID_
        service.rpc: node-_NODE_ID_
    spec:
      containers:
      - image: _QUORUM_IMAGE_
        imagePullPolicy: _IMAGE_PULL_POLICY_
        name: node-_NODE_ID_
        command: ["/bin/bash"]
        args:
        - "-cx"
        - |-
          _NODE_SCRIPT_
        ports:
        - containerPort: 8545
        - containerPort: 23000
        - containerPort: 9000
        - containerPort: 30303
        resources: {}
        volumeMounts:
        - name: node-_NODE_ID_
          mountPath: /qdata
        - name: quorum-permissioned-config
          mountPath: /qdata/dd/static-nodes.json
          subPath: static-nodes.json
        - name: genesis-config
          mountPath: /qdata/genesis.json
          subPath: genesis.json
        - name: start-config
          mountPath: /qdata/start.sh
          subPath: start.sh
        - name: crux-config
          mountPath: /qdata/tm.conf
          subPath: tm.conf
        - name: crux-publickey-config
          mountPath: /qdata/constellation/keys/tm.pub
          subPath: tm.pub
        - name: crux-privatekey-config
          mountPath: /qdata/constellation/keys/tm.key
          subPath: tm.key
        - name: quorum-privatekey-config
          mountPath: /qdata/dd/keystore/account.key
          subPath: account.key
        - name: quorum-password-config
          mountPath: /qdata/passwords.txt
          subPath: passwords.txt

      - image: _EXPLORER_IMAGE_
        imagePullPolicy: _IMAGE_PULL_POLICY_
        workingDir: /root/quorum-maker
        name: n_NODE_ID_-explorer
        command: ["/bin/bash", "start_nodemanager.sh", "8545", "22004"]
        ports:
        - containerPort: 22004
        resources: {}
        volumeMounts:
        - name: backend-config
          mountPath: /home/setup.conf
          subPath: setup.conf
        - name: genesis-config
          mountPath: /home/node/genesis.json
          subPath: genesis.json
      restartPolicy: Always
      volumes:
      - name: node-_NODE_ID_
        persistentVolumeClaim:
          claimName: node-_NODE_ID_
      - name: quorum-permissioned-config
        configMap:
          name: quorum-permissioned-config
          items:
            - key: static-nodes.json
              path: static-nodes.json
      - name: genesis-config
        configMap:
          name: genesis-config
          items:
            - key: genesis.json
              path: genesis.json
      - name: start-config
        configMap:
          name: start-config
          items:
            - key: start.sh
              path: start.sh
      - name: crux-config
        configMap:
          name: node-_NODE_ID_-crux-config
          items:
            - key: tm.conf
              path: tm.conf
      - name: backend-config
        configMap:
          name: node-_NODE_ID_-backend-config
          items:
            - key: setup.conf
              path: setup.conf
      - name: crux-publickey-config
        secret:
          secretName: node-_NODE_ID_-secret
          items:
            - key: tm.pub
              path: tm.pub
      - name: crux-privatekey-config
        secret:
          secretName: node-_NODE_ID_-secret
          items:
            - key: tm.key
              path: tm.key
      - name: quorum-privatekey-config
        secret:
          secretName: node-_NODE_ID_-secret
          items:
            - key: account.key
              path: account.key
      - name: quorum-password-config
        secret:
          secretName: node-_NODE_ID_-secret
          items:
            - key: passwords.txt
              path: passwords.txt
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    name: node-_NODE_ID_
  name: node-_NODE_ID_
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: standard
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app: consortiumchain
    version: '1'
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # TODO: Fill in with the ARN of your certificate.
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-northeast-1:198391286344:certificate/6f5b092c-a6ed-45f1-8c09-2be932e68f4d
    # Only run SSL on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-TLS-1-1-2017-01
  creationTimestamp: null
  labels:
    name: node-_NODE_ID_
  name: node-_NODE_ID_
spec:
  type: LoadBalancer
  clusterIP: "_NODE_IP_"
  ports:
  - name: rpc
    nodePort: 3170_NODE_ID_
    port: 8545
    targetPort: 8545
  - name: raft
    port: 23000
    targetPort: 23000
  - name: constellation
    port: 9000
    targetPort: 9000
  - name: tx
    port: 30303
    targetPort: 30303
  - name: backend
    nodePort: 30_NODE_ID_04
    port: 443
    targetPort: 22004
  selector:
    service.rpc: node-_NODE_ID_
status:
  loadBalancer: {}
---
